---
- name: Setup Punchtime
  hosts: all
  become: yes
  tasks:
    - name: Compile application
      ansible.builtin.shell:
        env GOOS=linux GOARCH=arm GOARM=5 go build
      delegate_to: localhost
      become: no
    - name: Install application
      ansible.builtin.copy:
        src: punchtime
        dest: /usr/local/bin/punchtime
        owner: pi
        group: pi
        mode: u=rwx,g=rx,o=rx
      register: application
    - name: Install recorder service
      ansible.builtin.copy:
        src: punchtime_recorder.service
        dest: /etc/systemd/system/punchtime_recorder.service
        owner: root
        group: root
        mode: u=rw,g=r,o=r
    - name: Create recorder config dir
      file:
        path: /etc/systemd/system/punchtime_recorder.service.d/
        state: directory
    - name: Install recorder config
      ansible.builtin.copy:
        content: |
          [Service]
          Environment="SLACK_TOKEN={{ lookup('env', 'SLACK_TOKEN') }}"
        dest: /etc/systemd/system/punchtime_recorder.service.d/override.conf
        owner: root
        group: root
        mode: u=rw,g=r,o=r
    - name: Punchtime service
      ansible.builtin.systemd:
        name: punchtime_recorder.service
        state: stopped
        enabled: no
        daemon_reload: yes
    - name: Install timer
      ansible.builtin.copy:
        src: punchtime_recorder.timer
        dest: /etc/systemd/system/punchtime_recorder.timer
        owner: root
        group: root
        mode: u=rw,g=r,o=r
    - name: Enable timer for punchtime
      ansible.builtin.systemd:
        name: punchtime_recorder.timer
        state: started
        enabled: yes
        daemon_reload: yes
    - name: Install web service
      ansible.builtin.copy:
        src: punchtime_web.service
        dest: /etc/systemd/system/punchtime_web.service
        owner: root
        group: root
        mode: u=rw,g=r,o=r
    - name: Create web config dir
      file:
        path: /etc/systemd/system/punchtime_web.service.d/
        state: directory
    - name: Install web config
      ansible.builtin.copy:
        content: |
          [Service]
          Environment="SLACK_TOKEN={{ lookup('env', 'SLACK_TOKEN') }}"
        dest: /etc/systemd/system/punchtime_web.service.d/override.conf
        owner: root
        group: root
        mode: u=rw,g=r,o=r
    - name: Punchtime web service
      ansible.builtin.systemd:
        name: punchtime_web.service
        state: started
        enabled: yes
        daemon_reload: yes
    - name: Restart Punchtime web
      ansible.builtin.systemd:
        name: punchtime_web.service
        state: restarted
        enabled: yes
      when: application.changed
    - name: Make /usr/local/share/punchtime directory
      file:
        path: /usr/local/share/punchtime
        state: directory
    - name: Copy database structure
      ansible.builtin.copy:
        src: migrations/000001_initial_schema.up.sql
        dest: /usr/local/share/punchtime/structure.sql
        owner: root
        group: root
        mode: u=rw,g=r,o=r
    - name: Install sqlite
      apt:
        name: sqlite3
    - name: Setup sqlite database
      ansible.builtin.shell:
        cmd: sqlite3 /usr/local/share/punchtime/punchtime.db < /usr/local/share/punchtime/structure.sql
